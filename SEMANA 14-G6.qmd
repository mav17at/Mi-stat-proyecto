---
title: "SEMANA 14"
author: "G6"
format: html
editor: visual
Integrantes: "Alarcon Tacson, Maria Victoria"
"Calderon Luque, Naomy Alexandra"
"De la Rosa Olachea, Randa Rosario"
"Muñante Quispe, Enith Margoryt"
---

## Instalar y cargar los paquetes

```{r}
install.packages("mice")
install.packages("ggmice")
```

```{r}
library(mice)
library(tidyverse)
library(here)
library(rio)
library(ggmice)
library(gtsummary)
```

Cargando los datos

```{r}
conoc_actit_factor_cancer_cervical <- import(here("data", "conoc_actit_factor_cancer_cervical.csv"))
```

Un vistazo a los datos

```{r}
head(conoc_actit_factor_cancer_cervical)
```
## 4 Realizando la imputación de datos

### 4.1 ¿Donde estan los valores perdidos?

```{r}
colSums(is.na(conoc_actit_factor_cancer_cervical))
```

```{r}
conoc_actit_factor_cancer_cervical |>
  select(
    edad,
    e_marital,
    edad_relacion_sexual,
    parejas_sex,
    num_hijos,
    antec_fam
  ) |>
  ggmice::plot_pattern(
    square = TRUE,
    rotate = TRUE
  )
```
### 4.2 Comparación de participantes con y sin valores perdidos
```{r}
tabla_parejas_sex = conoc_actit_factor_cancer_cervical |> 
  dplyr::select(
      edad,
    e_marital,
    edad_relacion_sexual,
    parejas_sex,
    num_hijos,
    antec_fam
    ) |>
  mutate(missing = factor(
    is.na(parejas_sex),
    levels = c(FALSE, TRUE),
    labels = c("Sin valores perdidos", "Con valores perdidos")
  )) |> 
  tbl_summary(
    by = missing,
    statistic = list(
      all_continuous()  ~ "{mean} ({sd})",
      all_categorical() ~ "{n}    ({p}%)")
    ) |> 
  modify_header(label = "**Variable**",
                all_stat_cols() ~ "**{level}**<br>N = {n} ({style_percent(p, digits=1)}%)") |> 
  modify_caption("Características de los participantes segun valor perdido") |> 
  bold_labels()

tabla_edad_relacion_sexual = conoc_actit_factor_cancer_cervical |> 
  dplyr::select(
       edad,
    e_marital,
    edad_relacion_sexual,
    parejas_sex,
    num_hijos,
    antec_fam
    ) |>
  mutate(missing = factor(
    is.na(edad_relacion_sexual),
    levels = c(FALSE, TRUE),
    labels = c("Sin valores perdidos", "Con valores perdidos")
  )) |> 
  tbl_summary(
    by = missing,
    statistic = list(
      all_continuous()  ~ "{mean} ({sd})",
      all_categorical() ~ "{n}    ({p}%)")
    ) |> 
  modify_header(label = "**Variable**",
                all_stat_cols() ~ "**{level}**<br>N = {n} ({style_percent(p, digits=1)}%)") |> 
  modify_caption("Características de los participantes segun valor perdido") |> 
  bold_labels()

tabla <- tbl_merge(
  tbls = list(tabla_parejas_sex, tabla_edad_relacion_sexual),
  tab_spanner = c("**numero de parejas sexuales**", "**edad de relaciones sexuales**")
)
```

```{r}
tabla
```

### 4.3 ¿Qué variables debo incluir en el proceso de imputación?

```{r}
input_data =
  conoc_actit_factor_cancer_cervical |>
    dplyr::select(
          edad,
    e_marital,
    edad_relacion_sexual,
    parejas_sex,
    num_hijos,
    antec_fam
    ) |> 
  mutate(antec_fam = as.factor(antec_fam))
```

### 4.4 La función `mice()` para imputar datos

```{r}
names(input_data)
```


```{r}
data_imputada <- mice(
  input_data,
  m = 20,
  method = c(
    "pmm", 
    "logreg",
    "pmm",
    "pmm", 
    "pmm", 
    "logreg" ),
  maxit = 20,
  seed = 3,
  print = FALSE
)
```

```{r}
data_imputada
```
## 5 Analizando los datos imputados

Para la variable parejas_sex

```{r}
ggmice(data_imputada, aes(x = .imp, y = parejas_sex)) +
  geom_jitter(height = 0, width = 0.25) +
  geom_boxplot(width = 0.5, size = 1, alpha = 0.55, outlier.shape = NA) +
  labs(x = "Imputation number")
```

Para la variables edad_relacion_sexual

```{r}
ggmice(data_imputada, aes(x = .imp, y = edad_relacion_sexual)) +
  geom_jitter(height = 0, width = 0.25) +
  geom_boxplot(width = 0.5, size = 1, alpha = 0.55, outlier.shape = NA) +
  labs(x = "Imputation number")
```

Con esta función, los datos observados se encuentran al inicio (azul), y los demás boxplots corresponden a los datos imputados (20). Para ambos casos, los datos imputados estan dentro del rango de los valores observados, son plausibles.

Para datos categóricos, podemos crear una tabla de dos entradas comparando la distribución de la variable con datos completos e incompletos. Esto requiere primero crear la versión "long" de la data imputada.

```{r}
data_imputada_l <- complete(data_imputada, "long", include = TRUE)
```

Ahora la tabla.

```{r}
data_imputada_l <- data_imputada_l %>% 
  mutate(imputed = .imp > 0,
         imputed = factor(imputed,
                          levels = c(F,T),
                          labels = c("Observado", "Imputado")))

prop.table(table(data_imputada_l$antec_fam,
                 data_imputada_l$imputed),
           margin = 2)
```

Idealmente los dos primero número luego del decimal, debe ser similares entre datos observados e imputados.

### 5.1 Procedimientos adicionales luego de la imputación

```{r}
tabla_multi <- 
  data_imputada |>
  with(glm(antec_fam ~ edad + e_marital + edad_relacion_sexual + 
           parejas_sex + num_hijos,
           family = binomial(link = "logit"))) |>
  tbl_regression(exponentiate = TRUE,
                 label = list(
                   edad ~ "Edad",
                   e_marital ~ "Estado civil",
                   edad_relacion_sexual ~ "Edad de inicio sexual",
                   parejas_sex ~ "N° de parejas sexuales",
                   num_hijos ~ "N° de hijos"
                 )) |>
  bold_p(t = 0.05) |>
  modify_header(estimate = "**OR ajustado**", p.value = "**p valor**")
```

```{r}
tabla_multi
```



